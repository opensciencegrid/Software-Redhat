################################################################################
# Docker Volume Mount Options
################################################################################

# Location on the host of the authentication token
TOKEN_LOCATION=/etc/osg/ospool-ep-container.tkn

# (Optional) dedicated volume mount for job I/O. If unset, job I/O will be performed on the same disk as other containers
WORKER_TEMP_DIR=

# Whether this container provides NVIDIA GPU resources
PROVIDE_NVIDIA_GPU=false

################################################################################
# Required OSPool Container Configuration Options
################################################################################

# Site for the glidein as configured in Topology
GLIDEIN_Site=

# Resource name for the glidein as configured in Topology
GLIDEIN_ResourceName=

# HTTP address of the Squid instance used by the glidein
OSG_SQUID_LOCATION=

################################################################################
# CVMFS options
# To use CVMFS, either bind-mount it from the host with BIND_MOUNT_CVMFS
# or add repos to CVMFSEXEC_REPOS to use cvmfsexec to mount specific repos.
################################################################################

# Whether to bind mount CVMFS from the host
BIND_MOUNT_CVMFS=false
# Space separated list of repos to mount at startup (if using cvmfsexec);
# leave this blank to disable cvmfsexec
CVMFSEXEC_REPOS=
# The proxy to use for CVMFS; leave this blank to use the default
CVMFS_HTTP_PROXY=
# The quota limit in MB for CVMFS; leave this blank to use the default
CVMFS_QUOTA_LIMIT=
# Set this to true to turn on CVMFSEXEC debugging
CVMFSEXEC_DEBUG=false

################################################################################
# Optional OSPool Container Configuration Options
################################################################################

# Options to limit resource usage:
# Number of CPUs available to jobs
NUM_CPUS=
# Amount of memory (in MB) available to jobs
MEMORY=

# How many hours to accept new jobs for
ACCEPT_JOBS_FOR_HOURS=62
# Hours to let running jobs finish during retirement
RETIREMENT_HOURS=10
# Minutes to wait before shutting down due to lack of jobs
ACCEPT_IDLE_MINUTES=30

# Set this to restrict this pilot to only run jobs from a specific Project
OSG_PROJECT_NAME=

# Additional paths to bind for Singularity jobs; same syntax as the -B option in singularity run
SINGULARITY_BIND_EXTRA=

# Additional restrictions for your START expression
GLIDEIN_Start_Extra=

# Allow CPU jobs on GPU slots if there are GPUs left
ALLOW_CPUJOB_ON_GPUSLOT=false

# Use the prepare-job-hook to run Singularity jobs
CONTAINER_PILOT_USE_JOB_HOOK=true

# Add a random string in the NETWORK_HOSTNAME (useful if running multiple containers with the same actual hostname)
GLIDEIN_RANDOMIZE_NAME=false

# Send pilot and condor logs to a central syslog server
ENABLE_REMOTE_SYSLOG=true

# Use ITB versions of scripts and connect to the ITB pool
ITB=false
