From e827f06fec2747894403f1a15f7f74df9a93a9f7 Mon Sep 17 00:00:00 2001
From: Brian Bockelman <bbockelman@morgridge.org>
Date: Thu, 15 Dec 2022 09:20:50 -0600
Subject: [PATCH] Provide a mechanism to override the detected hostname by
 environment variable.

Note the `myName` variable needed to be changed to a string as it must own
the memory; the memory pointed to by `getenv` my change after future `setenv` calls.
---
 src/Xrd/XrdConfig.cc | 26 +++++++++++++++++---------
 src/Xrd/XrdConfig.hh |  3 ++-
 2 files changed, 19 insertions(+), 10 deletions(-)

diff --git a/src/Xrd/XrdConfig.cc b/src/Xrd/XrdConfig.cc
index f1d13566509..a2b3d5dceb3 100644
--- a/src/Xrd/XrdConfig.cc
+++ b/src/Xrd/XrdConfig.cc
@@ -572,11 +572,19 @@ int XrdConfig::Configure(int argc, char **argv)
 // run in v4 mode and that doesn't get set until after the options are scanned.
 //
    static XrdNetAddr *myIPAddr = new XrdNetAddr((int)0);
-   if (!(myName = myIPAddr->Name(0, &temp))) myName = "";
+   auto envName = getenv("XRDHOST");
+   const char *ipAddrName;
+   if (envName) {
+      myName = envName;
+   } else if ((ipAddrName = myIPAddr->Name(0, &temp))) {
+      myName = ipAddrName;
+   } else {
+      myName = "";
+   }
 
 // Get our IP address and FQN
 //
-   ProtInfo.myName = myName;
+   ProtInfo.myName = myName.c_str();
    ProtInfo.myAddr = myIPAddr->SockAddr();
    ProtInfo.myInst = XrdOucUtils::InstName(myInsName);
    ProtInfo.myProg = myProg;
@@ -585,11 +593,11 @@ int XrdConfig::Configure(int argc, char **argv)
 // XRDINSTANCE=<pgm> <instance name>@<host name>
 //                 XrdOucEnv::Export("XRDINSTANCE")
 //
-   sprintf(buff,"%s%s %s@%s", xrdInst, myProg, ProtInfo.myInst, myName);
+   sprintf(buff,"%s%s %s@%s", xrdInst, myProg, ProtInfo.myInst, myName.c_str());
    myInstance = strdup(buff);
    putenv(myInstance);   // XrdOucEnv::Export("XRDINSTANCE",...)
    myInstance += strlen(xrdInst);
-   XrdOucEnv::Export("XRDHOST", myName);
+   XrdOucEnv::Export("XRDHOST", myName.c_str());
    XrdOucEnv::Export("XRDNAME", ProtInfo.myInst);
    XrdOucEnv::Export("XRDPROG", myProg);
 
@@ -608,7 +616,7 @@ int XrdConfig::Configure(int argc, char **argv)
 // We can't really continue without some kind of name at this point. Note that
 // vriable temp should still be valid from the previous NetAddr call.
 //
-   if (!(*myName))
+   if (myName.empty())
       {Log.Emsg("Config", "Unable to determine host name; ",
                            (temp ? temp : "reason unknown"),
                            "; execution terminated.");
@@ -633,13 +641,13 @@ int XrdConfig::Configure(int argc, char **argv)
 // Otherwise, determine our domain name.
 //
    if (!myIPAddr->isRegistered())
-      {Log.Emsg("Config",myName,"does not appear to be registered in the DNS.");
+      {Log.Emsg("Config",myName.c_str(),"does not appear to be registered in the DNS.");
        Log.Emsg("Config","Verify that the '/etc/hosts' file is correct and "
                          "this machine is registered in DNS.");
        Log.Emsg("Config", "Execution continues but connection failures may occur.");
        myDomain = 0;
-      } else if (!(myDomain = index(myName, '.')))
-                Log.Say("Config warning: this hostname, ", myName,
+      } else if (!(myDomain = index(myName.c_str(), '.')))
+                Log.Say("Config warning: this hostname, ", myName.c_str(),
                             ", is registered without a domain qualification.");
 
 // Setup the initial required protocol.
@@ -1885,7 +1893,7 @@ int XrdConfig::xport(XrdSysError *eDest, XrdOucStream &Config)
     strncpy(cport, val, sizeof(cport)-1); cport[sizeof(cport)-1] = '\0';
 
     if ((val = Config.GetWord()) && !strcmp("if", val))
-       if ((rc = XrdOucUtils::doIf(eDest,Config, "port directive", myName,
+       if ((rc = XrdOucUtils::doIf(eDest,Config, "port directive", myName.c_str(),
                               ProtInfo.myInst, myProg)) <= 0)
           {if (!rc) Config.noEcho(); return (rc < 0);}
 
diff --git a/src/Xrd/XrdConfig.hh b/src/Xrd/XrdConfig.hh
index a06ad462f4e..0c89bddd2b6 100644
--- a/src/Xrd/XrdConfig.hh
+++ b/src/Xrd/XrdConfig.hh
@@ -30,6 +30,7 @@
 /******************************************************************************/
 
 #include <vector>
+#include <string>
 
 #include "Xrd/XrdProtLoad.hh"
 #include "Xrd/XrdProtocol.hh"
@@ -94,7 +95,7 @@ static const char  *TraceID;
 XrdNetSecurity     *Police;
 XrdTcpMonInfo      *tmoInfo;
 const char         *myProg;
-const char         *myName;
+std::string         myName;
 const char         *myDomain;
 const char         *mySitName;
 const char         *myInsName;
