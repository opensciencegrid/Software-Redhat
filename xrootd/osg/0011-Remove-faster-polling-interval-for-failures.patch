From 720796d63630ffca1fd6878c6fb7076dbcb491ee Mon Sep 17 00:00:00 2001
From: Brian Bockelman <bbockelman@morgridge.org>
Date: Sat, 29 Jan 2022 13:09:56 -0600
Subject: [PATCH 11/17] Remove faster polling interval for failures.

Reduces some of the logical complexity; prevents log files filling
up quicker on failure.

(cherry picked from commit b324a1adbe08daa5babbdd49ac4f0d2ab1904174)
---
 src/XrdVoms/XrdVomsMapfile.cc | 9 +++------
 src/XrdVoms/XrdVomsMapfile.hh | 2 --
 2 files changed, 3 insertions(+), 8 deletions(-)

diff --git a/xrootd/src/XrdVoms/XrdVomsMapfile.cc b/xrootd/src/XrdVoms/XrdVomsMapfile.cc
index 24d23d281..98f226c68 100644
--- a/xrootd/src/XrdVoms/XrdVomsMapfile.cc
+++ b/xrootd/src/XrdVoms/XrdVomsMapfile.cc
@@ -428,31 +428,28 @@ XrdVomsMapfile::MaintenanceThread(void *myself_raw)
            if (rval == EINTR) continue;
            else break;
        } else if (rval == 0) { // timeout!  Let's run maintenance.
+           next_update = monotonic_time_s() + m_update_interval;
            struct stat statbuf;
            if (-1 == stat(myself->m_mapfile.c_str(), &statbuf)) {
                myself->m_edest->Emsg("XrdVomsMapfile", errno, "Error checking the mapfile",
                    myself->m_mapfile.c_str());
-               next_update = monotonic_time_s() + m_update_interval_failure;
                myself->m_mapfile_ctime.tv_sec = 0;
                myself->m_mapfile_ctime.tv_nsec = 0;
                myself->m_is_valid = false;
                continue;
            }
            if ((myself->m_mapfile_ctime.tv_sec == statbuf.st_ctim.tv_sec) &&
                (myself->m_mapfile_ctime.tv_nsec == statbuf.st_ctim.tv_nsec))
            {
                myself->m_edest->Log(LogMask::Debug, "Maintenance", "Not reloading VOMS mapfile; "
                    "no changes detected.");
-               next_update = monotonic_time_s() + m_update_interval;
                continue;
            }
            memcpy(&myself->m_mapfile_ctime, &statbuf.st_ctim, sizeof(decltype(statbuf.st_ctim)));
 
            myself->m_edest->Log(LogMask::Debug, "Maintenance", "Reloading VOMS mapfile now");
-           if ( (myself->m_is_valid = myself->ParseMapfile(myself->m_mapfile)) ) {
-               next_update = monotonic_time_s() + m_update_interval;
-           } else {
-               next_update = monotonic_time_s() + m_update_interval_failure;
+           if ( !(myself->m_is_valid = myself->ParseMapfile(myself->m_mapfile)) ) {
+               myself->m_edest->Log(LogMask::Error, "Maintenance", "Failed to reload VOMS mapfile");
            }
        } else { // FD ready; let's shutdown
            if (fds.revents & POLLIN) {
diff --git a/xrootd/src/XrdVoms/XrdVomsMapfile.hh b/xrootd/src/XrdVoms/XrdVomsMapfile.hh
index e859c8fbe..ae665c6e5 100644
--- a/xrootd/src/XrdVoms/XrdVomsMapfile.hh
+++ b/xrootd/src/XrdVoms/XrdVomsMapfile.hh
@@ -96,8 +96,6 @@ class XrdVomsMapfile {
 
         // After success, how long to wait until the next mapfile check.
     static constexpr unsigned m_update_interval = 30;
-        // After failure, how long to wait until the next mapfile check.
-    static constexpr unsigned m_update_interval_failure = 3;
 
     // Singleton
     static std::unique_ptr<XrdVomsMapfile> mapper;
-- 
2.25.1

