From b536b19e41b68c4168779ee68205f35e0ec19f79 Mon Sep 17 00:00:00 2001
From: Brian Bockelman <bbockelman@morgridge.org>
Date: Mon, 17 Jan 2022 08:58:11 -0600
Subject: [PATCH 07/17] Allow explicit grid-mapfile entries to override
 voms-mapfile.

If there's an entry found in the corresponding grid-mapfile, then
that is considered "more specific" and overrides the "less specific"
voms-mapfile entry.  E.g., a mapping to `bbockelm` should be picked
over a generic `cms`.

To differentiate between an explicit mapping and the fallbacks
generated for the plugins, we use the entity's extended attribute
mechanism.

(cherry picked from commit 156baf3e7c61bb05e9b8ef49ba403498f7f5c1dc)
---
 src/XrdHttp/XrdHttpSecurity.cc     |  2 ++
 src/XrdSecgsi/XrdSecProtocolgsi.cc |  2 ++
 src/XrdVoms/XrdVomsMapfile.cc      | 12 ++++++++++++
 3 files changed, 16 insertions(+)

diff --git a/xrootd/src/XrdHttp/XrdHttpSecurity.cc b/xrootd/src/XrdHttp/XrdHttpSecurity.cc
index af1c04c15..e187851c0 100644
--- a/xrootd/src/XrdHttp/XrdHttpSecurity.cc
+++ b/xrootd/src/XrdHttp/XrdHttpSecurity.cc
@@ -26,6 +26,7 @@
 #include "XrdCrypto/XrdCryptoX509Chain.hh"
 #include "XrdCrypto/XrdCryptosslAux.hh"
 #include "XrdCrypto/XrdCryptoFactory.hh"
+#include "XrdSec/XrdSecEntityAttr.hh"
 #include "XrdTls/XrdTlsPeerCerts.hh"
 #include "XrdTls/XrdTlsContext.hh"
 #include "XrdOuc/XrdOucGMap.hh"
@@ -164,6 +165,7 @@ XrdHttpProtocol::HandleGridMap(XrdLink* lp)
       TRACEI(DEBUG, " Mapping name: '" << SecEntity.moninfo << "' --> " << bufname);
       if (SecEntity.name) free(SecEntity.name);
       SecEntity.name = strdup(bufname);
+      SecEntity.eaAPI->Add("gridmap.name", bufname, true);
     }
     else {
       TRACEI(ALL, " Mapping name: " << SecEntity.moninfo << " Failed. err: " << mape);
diff --git a/xrootd/src/XrdSecgsi/XrdSecProtocolgsi.cc b/xrootd/src/XrdSecgsi/XrdSecProtocolgsi.cc
index b4b704b45..e93deb912 100644
--- a/xrootd/src/XrdSecgsi/XrdSecProtocolgsi.cc
+++ b/xrootd/src/XrdSecgsi/XrdSecProtocolgsi.cc
@@ -43,6 +43,7 @@
 #include "XrdVersion.hh"
 
 #include "XrdNet/XrdNetAddr.hh"
+#include "XrdSec/XrdSecEntityAttr.hh"
 #include "XrdSys/XrdSysHeaders.hh"
 #include "XrdSys/XrdSysLogger.hh"
 #include "XrdSys/XrdSysError.hh"
@@ -1953,6 +1954,7 @@ int XrdSecProtocolgsi::Authenticate(XrdSecCredentials *cred,
                DEBUG("user mapping lookup successful: name is '"<<name<<"'");
             }
             Entity.name = strdup(name.c_str());
+            Entity.eaAPI->Add("gridmap.name", name.c_str(), true);
          }
       }
       // If not set, use DN
diff --git a/xrootd/src/XrdVoms/XrdVomsMapfile.cc b/xrootd/src/XrdVoms/XrdVomsMapfile.cc
index d49dc3612..98849fa48 100644
--- a/xrootd/src/XrdVoms/XrdVomsMapfile.cc
+++ b/xrootd/src/XrdVoms/XrdVomsMapfile.cc
@@ -29,6 +29,7 @@
 #include "XrdOuc/XrdOucString.hh"
 #include "XrdOuc/XrdOucStream.hh"
 #include "XrdSec/XrdSecEntity.hh"
+#include "XrdSec/XrdSecEntityAttr.hh"
 #include "XrdSys/XrdSysError.hh"
 
 #include <memory>
@@ -256,6 +257,17 @@ XrdVomsMapfile::Apply(XrdSecEntity &entity)
 {
     Reconfigure();
 
+    // In current use cases, the gridmap results take precedence over the voms-mapfile
+    // results.  However, the grid mapfile plugins often will populate the name attribute
+    // with a reasonable default (DN or DN hash) if the mapping fails, meaning we can't
+    // simply look at entity.name; instead, we look at an extended attribute that is only
+    // set when the mapfile is used to generate the name.
+    std::string gridmap_name;
+    auto gridmap_success = entity.eaAPI->Get("gridmap.name", gridmap_name);
+    if (gridmap_success) {
+        return 0;
+    }
+
     int from_vorg = 0, from_role = 0, from_grps = 0;
     XrdOucString vorg = entity.vorg, entry_vorg;
     XrdOucString role = entity.role, entry_role;
-- 
2.25.1

