From df0db1bd509909fcf03728eeaa0f650b1293038c Mon Sep 17 00:00:00 2001
From: Brian Bockelman <bbockelman@morgridge.org>
Date: Tue, 30 Jul 2024 13:23:01 -0500
Subject: [PATCH] Do not leak file pointer on open error

If the file-open failed to finalize (this code path is hit in XCache
when a non-existent file is attempted to be opened), then the `fp`
object leaked.

This eventually fills up the file descriptor table in XrdPosix after
1M file-not-found responses from the cache, a denial of service until
the xrootd server is restarted.
---
 src/XrdPosix/XrdPosixXrootd.cc | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/src/XrdPosix/XrdPosixXrootd.cc b/src/XrdPosix/XrdPosixXrootd.cc
index bfd28557889..bf8fa94dbc9 100644
--- a/src/XrdPosix/XrdPosixXrootd.cc
+++ b/src/XrdPosix/XrdPosixXrootd.cc
@@ -652,7 +652,12 @@ int XrdPosixXrootd::Open(const char *path, int oflags, mode_t mode,
 //
    if (cbP) {errno = EINPROGRESS; return -1;}
    if (fp->Finalize(&Status)) return fp->FDNum();
-   return XrdPosixMap::Result(Status,XrdPosixGlobals::ecMsg,true);
+   auto rc = XrdPosixMap::Result(Status,XrdPosixGlobals::ecMsg,false);
+   if (!Status.IsOK()) {
+       delete fp;
+       errno = -rc;
+   }
+   return rc;
 }
   
 /******************************************************************************/
