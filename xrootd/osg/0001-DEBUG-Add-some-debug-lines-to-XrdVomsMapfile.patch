From bda4b61aebdae5d66322977d82b53e0b48416016 Mon Sep 17 00:00:00 2001
From: Matyas Selmeci <matyas@cs.wisc.edu>
Date: Sun, 18 Dec 2022 21:39:45 -0600
Subject: [PATCH] DEBUG: Add some debug lines to XrdVomsMapfile

---
 src/XrdVoms/XrdVomsMapfile.cc | 22 ++++++++++++++++++++--
 1 file changed, 20 insertions(+), 2 deletions(-)

diff --git a/src/XrdVoms/XrdVomsMapfile.cc b/src/XrdVoms/XrdVomsMapfile.cc
index 824edd94a..ededb473a 100644
--- a/src/XrdVoms/XrdVomsMapfile.cc
+++ b/src/XrdVoms/XrdVomsMapfile.cc
@@ -77,18 +77,25 @@ XrdVomsMapfile::XrdVomsMapfile(XrdSysError *erp,
         m_edest->Emsg("XrdVomsMapfile", errno, "Error checking the mapfile", m_mapfile.c_str());
         return;
     }
     memcpy(&m_mapfile_ctime, &statbuf.st_ctim, sizeof(decltype(m_mapfile_ctime)));
 
-    if (!ParseMapfile(m_mapfile)) {return;}
+    if (!ParseMapfile(m_mapfile)) {
+        m_edest->Emsg("XrdVomsMapfile", "Parsing voms mapfile failed; not going to try again");
+        return;
+    } else {
+        m_edest->Log(LogMask::Debug, "XrdVomsMapfile", "Parsing voms mapfile succeeded");
+    }
 
     pthread_t tid;
     auto rc = XrdSysThread::Run(&tid, XrdVomsMapfile::MaintenanceThread,
                                 static_cast<void*>(this), 0, "VOMS Mapfile refresh");
     if (rc) {
         m_edest->Emsg("XrdVomsMapfile", "Failed to launch VOMS mapfile monitoring thread");
         return;
+    } else {
+        m_edest->Log(LogMask::Debug, "XrdVomsMapfile", "VOMS mapfile monitoring thread launched");
     }
     m_is_valid = true;
 }
 
 
@@ -112,10 +119,13 @@ XrdVomsMapfile::ParseMapfile(const std::string &mapfile)
                 m_edest->Log(LogMask::Debug, "ParseMapfile", PathToString(entry.m_path).c_str(), "->", entry.m_target.c_str());
             }
             entries->emplace_back(entry);
         }
     }
+    std::stringstream ss;
+    ss << "Parsed " << entries->size() << " entries from file " << mapfile;
+    m_edest->Log(LogMask::Debug, "ParseMapfile", ss.str().c_str());
     m_entries = entries;
     return true;
 }
 
 
@@ -195,11 +205,14 @@ XrdVomsMapfile::ParseLine(const std::string &line, std::vector<std::string> &ent
 
 std::string
 XrdVomsMapfile::Map(const std::vector<string> &fqan)
 {
     decltype(m_entries) entries = m_entries;
-    if (!entries) {return "";}
+    if (!entries) {
+        m_edest->Log(LogMask::Debug, "VOMSMapfile", "No entries; can't map.");
+        return "";
+    }
 
     if (m_edest && (m_edest->getMsgMask() & LogMask::Debug)) {
         m_edest->Log(LogMask::Debug, "VOMSMapfile", "Mapping VOMS FQAN", PathToString(fqan).c_str());
     }
 
@@ -380,10 +393,15 @@ XrdVomsMapfile::MaintenanceThread(void *myself_raw)
 {
     auto myself = static_cast<XrdVomsMapfile*>(myself_raw);
 
    auto now = monotonic_time_s();
    auto next_update = now + m_update_interval;
+
+   std::stringstream ss;
+   ss << "Started XrdVomsMapfile::MaintenanceThread at " << now << "; next update at " << next_update;
+   myself->m_edest->Log(LogMask::Debug, "Maintenance", ss.str().c_str());
+
    while (true) {
        now = monotonic_time_s();
        auto remaining = next_update - now;
        auto rval = sleep(remaining);
        if (rval > 0) {
-- 
2.39.0

