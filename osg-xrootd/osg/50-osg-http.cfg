#
# Configure HTTP/S for OSG deploys of XRootD.
#
# **********************************************************************
# * WARNING: DO NOT EDIT THIS FILE.  IT WILL BE OVERWRITTEN ON UPGRADE *
# **********************************************************************
#
# This file is part of the OSG XRootD packaging

if defined ?~XRD_HTTP_PORT
   set HttpPort=$XRD_HTTP_PORT
else if defined ?HttpPort
   # admin-specified HTTP/S port
else
   set HttpPort=1094
fi

if defined ?~XRD_DISABLE_VOMS
    # pass
else if named stash-cache-auth
    set EnableVoms = 1
else if named stash-origin-auth
    set EnableVoms = 1
fi

# Only use HTTP for Stash Cache/Origin because the config necessary for
# HTTPS enables auth across all protocols
if defined ?EnableHttp && exec xrootd && named stash-cache
   xrd.protocol http:$(HttpPort) libXrdHttp.so
else if defined ?EnableHttp && exec xrootd && named stash-origin
   xrd.protocol http:$(HttpPort) libXrdHttp.so   
else if defined ?EnableHttp && exec xrootd
   xrd.protocol http:$(HttpPort) libXrdHttp.so

   xrd.tls /etc/grid-security/xrd/xrdcert.pem /etc/grid-security/xrd/xrdkey.pem
   xrd.tlsca certdir /etc/grid-security/certificates

   # Adding Macaroons setup by default SOFTWARE-3931
   http.exthandler xrdmacaroons libXrdMacaroons.so
   macaroons.secretkey /etc/xrootd/macaroon-secret
   ofs.authlib ++ libXrdMacaroons.so
   # Pass the bearer token to the Xrootd authorization framework.
   http.header2cgi Authorization authz

   http.gridmap /etc/grid-security/grid-mapfile
fi
if defined ?EnableVoms && defined ?EnableHttp && named stash-cache
   # pass
else if defined ?EnableVoms && defined ?EnableHttp && named stash-origin
   # pass
else if defined ?EnableVoms && defined ?EnableHttp && exec xrootd
   http.secxtractor /usr/lib64/libXrdVoms.so
fi

if defined ?EnableHttp && exec xrootd && named stash-cache-auth
   http.listingdeny no
else if defined ?EnableHttp && exec xrootd && named stash-origin-auth
   http.listingdeny no
else if defined ?EnableHttp && exec xrootd && named stash-origin
   http.listingdeny no
else if defined ?EnableHttp && exec xrootd
   http.listingdeny yes
fi
if defined ?EnableHttp && exec xrootd
   http.staticpreload http://static/robots.txt /etc/xrootd/ban-robots.txt
fi
